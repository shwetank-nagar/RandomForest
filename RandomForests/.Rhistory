model<-nls(number~(
(A+(B-A))/(1+exp(C*rate/D))
),data=drugs)
model<-nls(number~ A + (B-A)  / (1 + exp(C*log(rate/D))),data=drugs)
model<-nls(number~ A + (B-A)  / (1 + exp(C*log(rate/D))),data=drugs,start =list(A=100,B=4,C=2,D=0.2))
summary(model)
model$convInfo
model$dataClasses
model$call
model$m
summary(model)
predictions<-predict(model)
predictions<-predict(model,interval = "yes")
?predict.nls
predictions<-predict(model,interval = "confidence",level=0.95)
predictions
predictions<-predict(model,se.fit = T)
predictions<-predict(model,se.fit = T,newdata=drugs)
predictions<-predict(model,se.fit = T,newdata=drugs,interval = "confidence")
model<-nls2(number~ A + (B-A)  / (1 + exp(C*log(rate/D))),data=drugs,start =list(A=100,B=4,C=2,D=0.2))
predictions<-predict(model,se.fit = T,newdata=drugs,interval = "confidence")
summary(model)
?predict.nls2
?predict.nls
model
cat<-c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2)
number1<-c(0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08  ,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641)
rate1<-c(0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08  ,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641)
number1<-c(99,84,95,84,53,6,6,103,84,94,79,75,27,7,113,91,80,76,52,6,6,86,78,85,80,53,30,8,110,104,89,84,44,17,9,94,103,97,85,58,17,7,95,113,85,79,33,19,4,101,107,105,87,75,20,11,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12
Rate<-c(0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08  ,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641)
Number1<-c(99,84,95,84,53,6,6,103,84,94,79,75,27,7,113,91,80,76,52,6,6,86,78,85,80,53,30,8,110,104,89,84,44,17,9,94,103,97,85,58,17,7,95,113,85,79,33,19,4,101,107,105,87,75,20,11,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12
Number1<-c(99,84,95,84,53,6,6,103,84,94,79,75,27,7,113,91,80,76,52,6,6,86,78,85,80,53,30,8,110,104,89,84,44,17,9,94,103,97,85,58,17,7,95,113,85,79,33,19,4,101,107,105,87,75,20,11,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12)
number1<-c(99,84,95,84,53,6,6,103,84,94,79,75,27,7,113,91,80,76,52,6,6,86,78,85,80,53,30,8,110,104,89,84,44,17,9,94,103,97,85,58,17,7,95,113,85,79,33,19,4,101,107,105,87,75,20,11,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12)
Rate<-c(0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08  ,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641,0,.02,.04,.08,.16,.32,.641)
Number<-c(99,84,95,84,53,6,6,103,84,94,79,75,27,7,113,91,80,76,52,6,6,86,78,85,80,53,30,8,110,104,89,84,44,17,9,94,103,97,85,58,17,7,95,113,85,79,33,19,4,101,107,105,87,75,20,11,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12,99,92,82,63,40,22,12)
Drugs<-data.frame(cat=cat,Rate=Rate,Number=Number)
rm(number1,rate1)
table(Drugs$cat)
Drugs%>%group_by(cat)%>%summarise(mean(Number),mean(Rate))
library(shiny)
?reactive4
?reactive
library(dplyr)
library(ggplot2)
dat1<-read.csv("F:\\Ebooks\\Programming and Statistical Packages\\R\\Data\\audit.csv")
head(dat1)
p+geom_point(aes(color=Gender))
p<-ggplot(dat1,aes(x=Age,y=Income))
p+geom_point(aes(color=Gender))
p+geom_point(aes(color="blue"))
p+geom_point(color="blue")
p+geom_point(aes(color=blue))
p+geom_point(aes(color="blue"))
head(dat1)
p<-ggplot(dat1,aes(x=Gender,y=Income))
p+geom_bar()
p+geom_bar(stat="identity")
scipen=999
options(scipen=999)
p+geom_bar(stat="identity")
p+geom_histogram(stat="identity")
head(mtcars)
p<-ggplot(mtcars,aes(x=factor(cyl)))
p+geom_bar()
p+geom_bar()+coord_polar()
head(dat1)
p<-ggplot(dat1,aes(x=Age,y=Income))
p+geom_point(aes(color=Gender))
p+geom_point(aes(color=Gender))+scale_x_continuous(breaks=seq(0,80,10))
p+geom_point(aes(size=Gender,color=Income))
p+geom_point(aes(size=Gender,color=Income))+scale_size_discrete(range = c(1,2))
p+geom_point(aes(size=Gender,color=Income))+scale_size_discrete(range = c(1,3))
p+geom_point(aes(size=Gender,color=Income))+scale_size_discrete(range = c(1.1,3.2))
p+geom_point(aes(size=Gender,color=Income))+scale_size_discrete(range = c(1,3))
p+geom_point(aes(size=Gender,color=Income))+scale_size_discrete(labels=c("F","M"),range = c(1,3))+scale_color_continuous(low="blue",high="red")
p+geom_point(aes(size=Gender,color=Income))+scale_size_discrete(labels=c("F","M"),range = c(1,3))+scale_color_continuous(low="blue",high="red")+guides(size=F)
VADeaths
p<-ggplot(VADeaths,aes(x=`Rural Male`,y=`Rural Female`))#Why this error?
class(VADeaths)
gp<-data.frame(VADeaths)
gp
p<-ggplot(gp,aes(x=Rural.Male,y=Rural.Female))
p+geom_point()
head(economics)
head(presidential)
presidential<-presidential[-c(1:3),]
q<-ggplot(economics,aes(date,unemploy))
q+geom_line()
unemp=q+geom_line()+xlab("")+ylab( "No. unemployed (1000s)")
unemp
yrng <- range(economics$unemploy)
xrng <- range(economics$date)
presidential
unemp+geom_rect(data=presidential,aes(NULL,NULL,xmin=start,xmax=end,fill=party),ymin=yrng[1],ymax=yrng[2])
unemp+geom_rect(data=presidential,aes(NULL,NULL,xmin=start,xmax=end,fill=party),ymin=yrng[1],ymax=yrng[2],alpha=0.2)
presidential<-data("presidential")
presidential
presidential<-presidential
data("presidential")
presidential<-presidential
q<-ggplot(economics,aes(date,unemploy))
q+geom_line()
unemp=q+geom_line()+xlab("")+ylab( "No. unemployed (1000s)")
yrng <- range(economics$unemploy)
xrng <- range(economics$date)
unemp+geom_rect(data=presidential,aes(NULL,NULL,xmin=start,xmax=end,fill=party),ymin=yrng[1],ymax=yrng[2])
unemp+geom_rect(data=presidential,aes(NULL,NULL,xmin=start,xmax=end,fill=party),ymin=yrng[1],ymax=yrng[2],alpha=0.2)
install.packages("plotly")
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
data <- read.csv("C:/Users/Gunnvant/Downloads/dataRReqtest.csv")
View(data)
library(dplyr)
library(lubridate)
data$date_time<-ymd_hms(data$data_time)
data$date_time<-ymd_hms(data$date_time)
View(data)
data%>%arrange(date_time)
diff(data$date_time)
data%>%arrange(date_time)%>%group_by(user_id)%>%mutate(Difference=diff(date_time)*60)
data%>%arrange(date_time)%>%group_by(user_id)%>%mutate(Difference=diff(date_time))
data%>%arrange(date_time)%>%mutate(Difference=diff(date_time))%>%group_by(user_id)
data%>%arrange(date_time)
lag(data$date_time)
data$date_time
data%>%arrange(date_time)%>%mutate(Difference=date_time-lag(date_time))
data%>%arrange(date_time)%>%mutate(Difference=(date_time-lag(date_time))/60)
data%>%arrange(date_time)%>%mutate(Difference=date_time-lag(date_time))
30*60
data%>%arrange(date_time)%>%mutate(Difference=date_time-lag(date_time))%>%group_by(user_id)
data%>%arrange(date_time)%>%mutate(Difference=date_time-lag(date_time))%>%group_by(user_id)%>%filter(Difference<=1800)
data%>%arrange(date_time)%>%mutate(Difference=date_time-lag(date_time))%>%group_by(user_id)%>%filter(Difference>1800)
(XML)
library(XML)
data<-readHTMLTable("F:\\Work\\Jigsaw Academy\\Data Scientist Course\\Data Science Redo\\Folder Structure\\Assignments\\Graded Assignments\\Class 9 Data Visualization in R\\The World's Most Valuable Brands List - Forbes.html")
str(data)
data1<-data.frame(data)
data1
data
data$the_list
data.frame(data$the_list)
library(ggplot2)
?nudge
library(zoo)
d<-read.csv("http://sites.google.com/site/curtiskephart/data/nhisdata.txt")
write.csv("F:\\Work\\outlier.csv",row.names = F)
write.csv(d,"F:\\Work\\outlier.csv",row.names = F)
install.packages("sampling")
library(sampling)
strata=c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3)
X=cbind(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))
x
X
pik=rep(3/5,times=15)
s=balancedstratification(X,strata,pik,comment=TRUE)
data(MU284)
View(MU284)
X=cbind(MU284$P75,MU284$CS82,MU284$SS82,MU284$S82,MU284$ME84)
X
strata=MU284$REG
pik=inclusionprobabilities(MU284$P75,80)
s=balancedstratification(X,strata,pik,TRUE)
s
unique(MU284$REG)
data=rbind(matrix(rep("nc",165),165,1,byrow=TRUE),matrix(rep("sc",70),70,1,byrow=TRUE))
data=cbind.data.frame(data,c(rep(1,100), rep(2,50), rep(3,15), rep(1,30),rep(2,40)),
1000*runif(235))
names(data)=c("state","region","income")
data
table(data$region,data$state)
s=strata(data,c("region","state"),size=c(10,5,10,4,6), method="srswor")
s
getdata(data,s)
table(s$region,s$state)
dat%>%filter(year(Date)=='2014')%>%select(Var=The.course.fulfilled.the.purpose.for.which.it.was.undertaken)%>%group_by(Var)%>%summarise(Number=n())%>%mutate(Percent=Number/154)%>%data.frame()%>%datatable(options = list(pageLength = 2))
install.packages("edeR")
library(edeR)
file<-extractBetween("assignments@jigsawacademy.com","jig123assign",nmail=5)
file<-extractBetween("assignments@jigsawacademy.com","jig123assign",nmail=5,folder="inbox")
file<-extractBetween("assignments@jigsawacademy.com","jig123assign",nmail=5,folder="inbox",startDate = "25-01-2016",endDate = "26-01-2016")
file<-extractMbox("assignments@jigsawacademy.com","jig123assign",nmail=5,folder="inbox")
file
file<-extractMbox("assignments@jigsawacademy.com","jig123assign",nmail=-1,folder="inbox")
file
dim(file$data)
file$data
setwd("F:\\Work\\Jigsaw Academy\\Lending Club")
file<-read.csv("LoanStatsNew.csv",na.strings =c(NA,""," ","Missing"),header=TRUE,skip=1)
score<-file
rm(file)
library(dplyr)
library(lubridate)
library(smbinning)
##Creating target variable##
#taking out irrelevant levels from target variable#
index1<-which(score$loan_status=="Does not meet the current credit policy.  Status:Fully Paid")
index2<-which(score$loan_status=="Fully Paid")
index3<-which(score$loan_status=="Issued")
ind<-c(index1,index2,index3)
dat<-score[-ind,]
#creating 0,1 target#
dat$Target<-ifelse(dat$loan_status=="Charged Off"|dat$loan_status=="Does not meet the current credit policy.  Status:Charged Off",0,1)
##Taking out the irrelevant columns post data audit
remove<-c("funded_amnt","funded_amnt_inv","accept_d","exp_d","list_d","issue_d","pymnt_plan","url","initial_list_status","out_prncp","out_prncp_inv","total_pymnt","total_pymnt_inv","total_rec_prncp","total_rec_int","total_rec_late_fee","last_pymnt_d","last_pymnt_amnt","next_pymnt_d","last_credit_pull_d","last_fico_range_high","last_fico_range_low","loan_status" )
data<-dat[,-which(names(dat)%in%remove)]
n<-data.frame(sapply(data,class))
n$Unique<-apply(data,2,function(x){length(unique(x))})
n$Colname<-rownames(n)
colnames(n)[1]<-"Class"
n1<-rownames(n[(n$Class=="integer"|n$Class=="numeric")&n$Unique>10,])
if(sum(grepl("Target",n1))==0){n1<-c("Target",n1)}
#Pulling all the character or factor variables
n2<-colnames(data[,which(!names(data)%in%n1)])
n3<-data.frame(sapply(data[n2],class))
n3$unique<-apply(data[n2],2,function(x){length(unique(x))})
n3$Colname<-rownames(n3)
colnames(n3)[1]<-"Class"
n2<-rownames(n3[n3$Class=="factor"&n3$unique<=50,])
#Will be used later in the report to figure out the variables with no auto      summaries
n4<-rownames(n3[n3$Class=="factor"&n3$unique>50,])
n5<-n3[n3$Class=="factor"&n3$unique>50,"unique"]
n4<-data.frame(Var.Name=n4,Unque.Levels=n5)#Use n4 to write out a data.frame
if(sum(grepl("Target",n2))==0){n2<-c("Target",n2)}
#Computing IV tables for Numeric variable
library(smbinning)
numeric_list<-list()
for(i in 2:length(n1))
{
numeric_list[[i]]<-tryCatch(smbinning(data[,n1],y="Target",x=n1[i],p=0.05)$ivtable, error=function(e){return(data.frame());data[,n1[i]]})
}
numeric_list<-numeric_list[-1]
names(numeric_list)<-n1[-1]
#Computing IVs for factor variables
factor_list<-list()
for(i in 2:length(n2))
{
factor_list[[i]]<-tryCatch(smbinning.factor(data[,n2],y="Target",x=n2[i])$ivtable, error=function(e){return(data.frame());data[,n1[i]]})
}
factor_list<-factor_list[-1]
names(factor_list)<-n2[-1]
#Extracting variable names with no columns and with non zero number of columns
#Numeric Column extraction
data_frames_numeric<-sapply(numeric_list,function(x){dim(x)[2]})
names_numeric<-names(data_frames_numeric[data_frames_numeric!=0])
non_numeric<-names(data_frames_numeric[data_frames_numeric==0])
non_numeric_dataframe<-data.frame(Var.Names=non_numeric)
#Factor column extraction
data_frames_factor<-sapply(factor_list,function(x){dim(x)[2]})
names_factor<-names(data_frames_factor[data_frames_factor!=0])
#Extracting numeric variable IVs as data frames
data_iv<-data.frame(numeric_list[names_numeric[1]])
colnames(data_iv)<-c("Cutpoint","CntRec","CntGood","CntBad","CntCumRec","CntCumGood","CntCumBad","PctRec","GoodRate","BadRate","Odds","LnOdds","WoE","IV")
data_iv1<-data.frame()
for(i in 1:length(names_numeric))
{
data_iv1<-data.frame(numeric_list[names_numeric[i]])
colnames(data_iv1)<-c("Cutpoint","CntRec","CntGood","CntBad","CntCumRec","CntCumGood","CntCumBad","PctRec","GoodRate","BadRate","Odds","LnOdds","WoE","IV")
data_iv<-rbind(data_iv,names_numeric[i],data_iv1)
}
data_iv_factor<-data.frame(factor_list[names_factor[1]])
colnames(data_iv_factor)<-c("Cutpoint","CntRec","CntGood","CntBad","CntCumRec","CntCumGood","CntCumBad","PctRec","GoodRate","BadRate","Odds","LnOdds","WoE","IV")
data_iv1_factor<-data.frame()
for(i in 1:length(names_factor))
{
data_iv1_factor<-data.frame(factor_list[names_factor[i]])
colnames(data_iv1_factor)<-c("Cutpoint","CntRec","CntGood","CntBad","CntCumRec","CntCumGood","CntCumBad","PctRec","GoodRate","BadRate","Odds","LnOdds","WoE","IV")
data_iv_factor<-rbind(data_iv_factor,names_factor[i],data_iv1_factor)
}
rm(data_iv,data_iv_factor,data_iv1_factor,data_iv1,n,n3,score,data_frames_factor,data_frames_numeric,factor_list,i,ind,index1,index2,index3,n1,n2,n5,names_factor,names_numeric,numeric_list,remove)
n4
unique(dat$int_rate)
unique(dat$emp_name)
n4
head(unique(dat$desc))
head(unique(dat$title))
n4
head(unique(dat$addr_city))
head(unique(dat$earliest_cr_line))
head(unique(dat$revol_util))
n4
head(unique(dat$apr))
data$apr<-gsub("[%]","",data$apr)
head(unique(dat$apr))
data$apr<-gsub("%","",data$apr)
head(unique(dat$apr))
data$apr<-character(dat$apr)
data$apr<-as.character(dat$apr)
head(unique(dat$apr))
data$apr<-gsub("%","",data$apr)
head(unique(dat$apr))
data$apr<-unclass(dat$apr)
head(unique(dat$apr))
head(unique(data$apr))
rm(data)
rm(dat)
file<-read.csv("LoanStatsNew.csv",na.strings =c(NA,""," ","Missing"),header=TRUE,skip=1)
score<-file
rm(file)
library(dplyr)
library(lubridate)
library(smbinning)
##Creating target variable##
#taking out irrelevant levels from target variable#
index1<-which(score$loan_status=="Does not meet the current credit policy.  Status:Fully Paid")
index2<-which(score$loan_status=="Fully Paid")
index3<-which(score$loan_status=="Issued")
ind<-c(index1,index2,index3)
dat<-score[-ind,]
#creating 0,1 target#
dat$Target<-ifelse(dat$loan_status=="Charged Off"|dat$loan_status=="Does not meet the current credit policy.  Status:Charged Off",0,1)
##Taking out the irrelevant columns post data audit
remove<-c("funded_amnt","funded_amnt_inv","accept_d","exp_d","list_d","issue_d","pymnt_plan","url","initial_list_status","out_prncp","out_prncp_inv","total_pymnt","total_pymnt_inv","total_rec_prncp","total_rec_int","total_rec_late_fee","last_pymnt_d","last_pymnt_amnt","next_pymnt_d","last_credit_pull_d","last_fico_range_high","last_fico_range_low","loan_status" )
data<-dat[,-which(names(dat)%in%remove)]
head(unique(data$apr))
data$apr<-gsub("%","",data$apr)
head(unique(data$apr))
data$apr<-as.numeric(data$apr)
head(unique(data$apr))
smbinning(data,"Target","apr")$ivtable
n4
head(unique(data$int_rate))
data$int_rate<-gsub("%","",data$int_rate)
head(unique(data$int_rate))
data$int_rate<-as.numeric(data$int_rate)
smbinning(data,"Target","int_rate")$ivtable
n4
head(unique(data$title))
head(unique(data$earliest_cr_line))
head(unique(data$revol_util))
data$revol_util<-gsub("%","",data$revol_util)
head(unique(data$revol_util))
data$revol_util<-as.character(data$revol_util)
smbinning(data,"Target","revol_util")$ivtable
smbinning(data,"Target","revol_util")
names(data)
sort(names(data))
summary(data$revol_util)
data$revol_util<-as.numeric(data$revol_util)
head(unique(data$revol_util))
smbinning(data,"Target","revol_util")$ivtable
smbinning(data,"Target","apr")$ivtable$<-"apr"
smbinning(data,"Target","apr")$ivtable$Name<-"apr"
smbinning(data,"Target","apr")$ivtable
smbinning(data,"Target","apr")$ivtable->a
a$Name<-"apr"
a
smbinning(data,"Target","int_rate")$ivtable->b
b$Name<-"int_rate"
smbinning(data,"Target","revol_util")$ivtable->c
c$Name<-"revol_util"
a
b
c
write.csv(rbind(a,b,c),"ManualIVs2.csv",row.names=F)
rm(a,b,c)
library(slidify)
library(slidifyLibraries)
setwd("F:\\Work\\Jigsaw Academy\\Corporate Trainings\\Bocconi\\Batch 2\\Online Sessions\\Clustering-ML")
author("slides")
dim(iris)
plot(iris$Petal.Length,iris$Petal.Width,col=iris$Species)
plot(iris$Petal.Length,iris$Petal.Width)
plot(iris$Petal.Length,iris$Petal.Width,xlab = "Petal Length",ylab="Petal Width")
library(ggplot2)
?xlim
setwd("F:\\Work\\Jigsaw Academy\\Corporate Trainings\\Bocconi\\Batch 2\\Online Sessions\\RandomForests-ML")
library(slidify)
library(slidifyLibraries)
author("RandomForests")
library(ggplot2)
library(dplyr)
data_gen<-function(x)
{
y=2+0.8*x+rnorm(length(x),0,2)
return(y)
}
y=data_gen(1:10)
y
plot(1:10,y)
set.seed(100)
y<-data_gen(1:10)
graph_dat<-data.frame(1:10,y)
graph_dat<-data.frame(x=1:10,y)
p<-ggplot(graph_dat,aes(x=x,y=y),color='red')
p+geom_point()
p<-ggplot(graph_dat,aes(x=x,y=y),col='red')
p+geom_point()
p<-ggplot(graph_dat,aes(x=x,y=y),colour='red')
p+geom_point()
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color='red')
p+geom_point(color='red')+geom_smooth()
p+geom_point(color='red')+geom_line(color='green')
y1=predict(lm(y~1:10))
lm(y~1:10)
x=1:10
y1=predict(lm(y~x))
plot(x,y)
plot(x,y1)
y2=smooth.spline(x,y)$y
plot(x,y2)
graph_dat<-data.frame(x,y,y1,y2)
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color='red')+geom_line(color='green')
p+geom_point(color='red')+geom_line(color='green')+geom_line(aes(y=y1))
p+geom_point(color='red')+geom_line(color='green')+geom_line(aes(y=y1),color='magenta')
p+geom_point(color='red')+geom_line(color='green')+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')
p+geom_point(color='red')+geom_line(color='green')+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')+theme_bw()
y4=data_gen(1:10)
y3=data_gen(1:10)
graph_dat<-data.frame(x,y,y1,y2,y3)
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(color="red")+geom_line(aes(y=y),color="green")+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')+theme_bw()
data_gen<-function(x,w)
{
y=2+0.8*x+rnorm(length(x),0,w)
return(y)
}
set.seed(100)
x=1:10
y<-data_gen(x,2)
y1=predict(lm(y~x))
y2=smooth.spline(x,y)$y
graph_dat<-data.frame(x,y,y1,y2)
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color='red')+geom_line(color='green')+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')+theme_bw()
y3=data_gen(x,1)
graph_dat<-data.frame(x,y,y1,y2,y3)
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(color="red")+geom_line(aes(y=y),color="green")+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')+theme_bw()
y3=data_gen(x,0.5)
graph_dat<-data.frame(x,y,y1,y2,y3)
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(color="red")+geom_line(aes(y=y),color="green")+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')+theme_bw()
set.seed(100)
y3=data_gen(x,0.5)
graph_dat<-data.frame(x,y,y1,y2,y3)
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(color="red")+geom_line(aes(y=y),color="green")+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')+theme_bw()
p+geom_point(color="red")+geom_line(aes(y=y),color="green")+geom_line(aes(y=y1),color='magenta')+geom_line(aes(y=y2),color='steelblue')+theme_bw()+scale_color_manual(name="Model",values = color)
col<-c("Most Flexible"="green","Linear"="blue","Spline"="magenta")
p+geom_point(color='red')+geom_line(aes(color="Most Flexible"))+geom_line(aes(y=y1,color="Linear"))+geom_line(aes(y=y2,color="Spline"))+theme_bw()
p+geom_point(color='red')+geom_line(aes(color="Most Flexible"))+geom_line(aes(y=y1,color="Linear"))+geom_line(aes(y=y2,color="Spline"))+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(aes(y=y3),color='red')+geom_line(aes(color="Most Flexible"))+geom_line(aes(y=y1,color="Linear"))+geom_line(aes(y=y2,color="Spline"))+theme_bw()+scale_color_manual(name="Models",values=col)
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(aes(y=y3),color='red')+geom_line(aes(color="Most Flexible"))+geom_line(aes(y=y1,color="Linear"))+geom_line(aes(y=y2,color="Spline"))+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(aes(y=y3),color='red')+geom_line(aes(y=y,color="Most Flexible"))+geom_line(aes(y=y1,color="Linear"))+geom_line(aes(y=y2,color="Spline"))+theme_bw()+scale_color_manual(name="Models",values=col)
col<-c("Most Flexible"="#f04546","Linear"="#3591d1","Spline"="#62c76b")
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color='red')+geom_line(aes(color="Most Flexible"))+geom_line(aes(y=y1,color="Linear"))+geom_line(aes(y=y2,color="Spline"))+theme_bw()+scale_color_manual(name="Models",values=col)
?geom_line
p+geom_point(color='red',size=2)+geom_line(aes(color="Most Flexible"),size=2)+geom_line(aes(y=y1,color="Linear"),size=2)+geom_line(aes(y=y2,color="Spline"),size=2)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='red',size=3)+geom_line(aes(color="Most Flexible"),size=2)+geom_line(aes(y=y1,color="Linear"),size=2)+geom_line(aes(y=y2,color="Spline"),size=2)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='red')+geom_line(aes(color="Most Flexible"),size=1.2)+geom_line(aes(y=y1,color="Linear"),size=1.2)+geom_line(aes(y=y2,color="Spline"),size=1.2)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='red',size=2)+geom_line(aes(color="Most Flexible"),size=1.2)+geom_line(aes(y=y1,color="Linear"),size=1.2)+geom_line(aes(y=y2,color="Spline"),size=1.2)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='black',size=2)+geom_line(aes(color="Most Flexible"),size=1.2)+geom_line(aes(y=y1,color="Linear"),size=1.2)+geom_line(aes(y=y2,color="Spline"),size=1.2)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='black',size=3)+geom_line(aes(color="Most Flexible"),size=1.2)+geom_line(aes(y=y1,color="Linear"),size=1.2)+geom_line(aes(y=y2,color="Spline"),size=1.2)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='black',size=3)+geom_line(aes(color="Most Flexible"),size=1.1)+geom_line(aes(y=y1,color="Linear"),size=1.1)+geom_line(aes(y=y2,color="Spline"),size=1.1)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='black',size=5)+geom_line(aes(color="Most Flexible"),size=1.1)+geom_line(aes(y=y1,color="Linear"),size=1.1)+geom_line(aes(y=y2,color="Spline"),size=1.1)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='black',size=5)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='black',size=2)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color='black',size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
col<-c("Most Flexible"="#ffeead","Linear"="#ff6f69","Spline"="#ffcc5c")
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color="#96ceb4",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
col<-c("Most Flexible"="#9ebd9e","Linear"="#dd855c","Spline"="#f1e8ca")
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color="#bbcbdb",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
col<-c("Most Flexible"="#9ebd9e","Linear"="#dd855c","Spline"="#745151")
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color="#bbcbdb",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
col<-c("Most Flexible"="#9ebd9e","Linear"="#dd855c","Spline"="#745151")
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color="#ff6f69",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color="#fb2e01",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color="#0000ff",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
graph_dat<-data.frame(x,y,y1,y2,y3)
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(aes(y=y3),color='#0000ff',size=3)+geom_line(aes(y=y,color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color="#0000ff",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color="#0000ff",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color="#0000ff",size=3)+geom_line(aes(y=y1,color="Linear"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p+geom_point(color="#0000ff",size=3)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(aes(y=y3),color='#0000ff',size=3)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)
library(ggplot2)
library(dplyr)
data_gen<-function(x,w)
{
y=2+0.8*x+rnorm(length(x),0,w)
return(y)
}
set.seed(100)
x=1:10
y<-data_gen(x,2)
y1=predict(lm(y~x))
y2=smooth.spline(x,y)$y
y3=data_gen(x,0.5)
graph_dat<-data.frame(x,y,y1,y2,y3)
col<-c("Most Flexible"="#9ebd9e","Linear"="#dd855c","Spline"="#745151")
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color="#0000ff",size=3)+xlab("X Values")+ylab('Y Values')+theme_bw()
p+geom_point(color="#0000ff",size=3)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)+xlab("X Values")+ylab('Y Values')
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(aes(y=y3),color='#0000ff',size=3)+geom_line(aes(y=y,color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)+xlab("X Values")+ylab('Y Values')
p<-ggplot(graph_dat,aes(x=x,y=y))
p+geom_point(color="#0000ff",size=3)+geom_line(aes(color="Most Flexible"),size=1.05)+geom_line(aes(y=y1,color="Linear"),size=1.05)+geom_line(aes(y=y2,color="Spline"),size=1.05)+theme_bw()+scale_color_manual(name="Models",values=col)+xlab("X Values")+ylab('Y Values')
p<-ggplot(graph_dat,aes(x=x,y=y3))
p+geom_point(aes(y=y3),color='#0000ff',size=3)+geom_line(aes(y=y,color="Most Flexible"),size=1.05)
p+geom_point(aes(y=y3),color='#0000ff',size=3)+geom_line(aes(y=y,color="Most Flexible"),size=1.05)+theme_bw()+xlab("X Values")+ylab('Y Values')
